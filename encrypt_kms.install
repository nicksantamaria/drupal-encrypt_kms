<?php

/**
 * @file
 * Contains installation and update hooks.
 */

/**
 * Implements hook_requirements().
 */
function encrypt_kms_requirements($phase) {
  $requirements = [];

  if ($phase == "runtime") {
    // Ensure the AWS SDK exists.
    $requirements['aws-sdk'] = [
      'title' => 'Encrypt KMS: AWS SDK',
      'severity' => REQUIREMENT_ERROR,
      'value' => 'missing',
    ];
    if (class_exists('\Aws\Kms\KmsClient')) {
      $requirements['aws-sdk']['severity'] = REQUIREMENT_OK;
      $requirements['aws-sdk']['value'] = 'present';
    }

    // Ensure there are credentials configured. This might be via drupal config
    // or instance profiles.
    $requirements['aws-creds'] = [
      'title' => 'Encrypt KMS: AWS Credentials',
      'severity' => REQUIREMENT_ERROR,
      'value' => 'No credentials',
    ];
    if (class_exists('\Aws\Sts\StsClient')) {
      $config = \Drupal::config('encrypt_kms.settings');

      $options = [
        'region' => $config->get('aws_region'),
        'version' => 'latest',
      ];

      // Pass in credentials if they are set.
      $awsKey = $config->get('aws_key');
      $awsSecret = $config->get('aws_secret');
      if (!empty($awsKey) && !empty($awsSecret)) {
        $options['credentials'] = [
          'key' => $awsKey,
          'secret' => $awsSecret,
        ];
      }

      try {
        $stsClient = new \Aws\Sts\StsClient($options); // @codingStandardsIgnoreLine
        $result = $stsClient->getCallerIdentity();
        if (!empty($result['UserId'])) {
          $requirements['aws-creds']['severity'] = REQUIREMENT_OK;
          $requirements['aws-creds']['value'] = $result['UserId'];
        }
      }
      catch (Exception $e) {
        watchdog_exception('php', $e);
      }

    }
  }

  return $requirements;
}
